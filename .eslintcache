[{"/Users/prmph/Code/Agyemanjp/passport-heroku/lib/index.ts":"1","/Users/prmph/Code/Agyemanjp/passport-heroku/lib/profile.ts":"2","/Users/prmph/Code/Agyemanjp/passport-heroku/lib/strategy.ts":"3"},{"size":116,"mtime":1662294858700,"results":"4","hashOfConfig":"5"},{"size":979,"mtime":1662292148487,"results":"6","hashOfConfig":"5"},{"size":3674,"mtime":1662296623683,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","suppressedMessages":"10","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"9lp5nw",{"filePath":"11","messages":"12","suppressedMessages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14"},{"filePath":"15","messages":"16","suppressedMessages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/prmph/Code/Agyemanjp/passport-heroku/lib/index.ts",[],[],"/Users/prmph/Code/Agyemanjp/passport-heroku/lib/profile.ts",["18","19","20"],["21"],"/* eslint-disable camelcase */\n/** Parse profile. */\nexport function parse(json: { id: string, name: string, email: string } & Profile[\"heroku\"]) {\n\tif ('string' == typeof json) {\n\t\tjson = JSON.parse(json)\n\t}\n\n\tconst profile = {} as Profile\n\t// Normalized profile bits\n\tprofile.id = String(json.id)\n\tprofile.displayName = json.name\n\tif (json.email) {\n\t\tprofile.emails = [{ value: json.email }]\n\t}\n\t// Heroku-specific profile bits\n\tprofile.heroku = {\n\t\tbeta: json.beta,\n\t\tverified: json.verified,\n\t}\n\n\tif (json.default_organization) {\n\t\tprofile.heroku.default_organization = json.default_organization\n\t}\n\n\treturn profile\n}\n\nexport type Profile = {\n\tprovider: `heroku`;\n\n\t/** the user's Heroku ID */\n\tid: string;\n\n\t/** the user's full name */\n\tdisplayName: string;\n\n\t/** the user's email addresses */\n\temails: { value: string }[];\n\n\t/** Heroku-specific fields */\n\theroku: {\n\t\tbeta: any;\n\t\tverified: any;\n\t\tdefault_organization?: string\n\t};\n\n\t_raw?: string | Buffer;\n\t_json: any;\n}\n","/Users/prmph/Code/Agyemanjp/passport-heroku/lib/strategy.ts",["22","23","24","25"],[],{"ruleId":"26","severity":1,"message":"27","line":42,"column":9,"nodeType":"28","messageId":"29","endLine":42,"endColumn":12,"suggestions":"30"},{"ruleId":"26","severity":1,"message":"27","line":43,"column":13,"nodeType":"28","messageId":"29","endLine":43,"endColumn":16,"suggestions":"31"},{"ruleId":"26","severity":1,"message":"27","line":48,"column":9,"nodeType":"28","messageId":"29","endLine":48,"endColumn":12,"suggestions":"32"},{"ruleId":"33","severity":2,"message":"34","line":22,"column":18,"nodeType":"35","messageId":"36","endLine":22,"endColumn":38,"suppressions":"37"},{"ruleId":"38","severity":1,"message":"39","line":72,"column":76,"nodeType":"35","messageId":"40","endLine":72,"endColumn":79},{"ruleId":"26","severity":1,"message":"27","line":104,"column":32,"nodeType":"28","messageId":"29","endLine":104,"endColumn":35,"suggestions":"41"},{"ruleId":"26","severity":1,"message":"27","line":104,"column":42,"nodeType":"28","messageId":"29","endLine":104,"endColumn":45,"suggestions":"42"},{"ruleId":"26","severity":1,"message":"27","line":104,"column":78,"nodeType":"28","messageId":"29","endLine":104,"endColumn":81,"suggestions":"43"},"@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["44","45"],["46","47"],["48","49"],"camelcase","Identifier 'default_organization' is not in camel case.","Identifier","notCamelCase",["50"],"@typescript-eslint/no-unused-vars","'res' is defined but never used.","unusedVar",["51","52"],["53","54"],["55","56"],{"messageId":"57","fix":"58","desc":"59"},{"messageId":"60","fix":"61","desc":"62"},{"messageId":"57","fix":"63","desc":"59"},{"messageId":"60","fix":"64","desc":"62"},{"messageId":"57","fix":"65","desc":"59"},{"messageId":"60","fix":"66","desc":"62"},{"kind":"67","justification":"68"},{"messageId":"57","fix":"69","desc":"59"},{"messageId":"60","fix":"70","desc":"62"},{"messageId":"57","fix":"71","desc":"59"},{"messageId":"60","fix":"72","desc":"62"},{"messageId":"57","fix":"73","desc":"59"},{"messageId":"60","fix":"74","desc":"62"},"suggestUnknown",{"range":"75","text":"76"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"75","text":"77"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"78","text":"76"},{"range":"78","text":"77"},{"range":"79","text":"76"},{"range":"79","text":"77"},"directive","",{"range":"80","text":"76"},{"range":"80","text":"77"},{"range":"81","text":"76"},{"range":"81","text":"77"},{"range":"82","text":"76"},{"range":"82","text":"77"},[880,883],"unknown","never",[897,900],[972,975],[3612,3615],[3622,3625],[3658,3661]]